{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x094aa79b3ceae4750a4f449ecada65411d716706e14d81dd2f5b59972df64fe8",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xbd8d30239c7a7a02ae504a43e20e9bc1479cc8dbded9c86e8f085a57041c9f14",
      "kind": "uups"
    }
  ],
  "impls": {
    "6488ae3e066366bc6ed732a0f3e9d80c4af8e423c9f7ecc8aa69fa78cefb72cc": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xa19fbaf226c3224cd051c9c18d2cc09af5e8cda9953ffa631e2145a4971a0b03",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "userCount",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:16"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:17"
          },
          {
            "label": "userState",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_struct(User)3311_storage)",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:135"
          },
          {
            "label": "userWalletAddressExists",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:136"
          },
          {
            "label": "gameStateMetadataHashExists",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:137"
          },
          {
            "label": "stateMetadataHashExists",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:138"
          },
          {
            "label": "adminWhitelistedAddresses",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(AdminRoles)3296)",
            "contract": "UserStateCore",
            "src": "contracts/UserStateContracts/UserStateCore.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(AdminRoles)3296": {
            "label": "enum UserStateCore.AdminRoles",
            "members": [
              "NONE",
              "MINTER",
              "MANAGER"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(AdminRoles)3296)": {
            "label": "mapping(address => enum UserStateCore.AdminRoles)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(User)3311_storage)": {
            "label": "mapping(uint256 => struct UserStateCore.User)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(User)3311_storage": {
            "label": "struct UserStateCore.User",
            "members": [
              {
                "label": "email",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "walletAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stateMetadataHash",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gameIDs",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "gameMetadataHash",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
